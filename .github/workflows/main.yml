name: ELB-DEMO

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ hashFiles('**/package-lock.json') }}
        restore-keys: -node-

    - name: Node
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: NPM install script
      run: npm install

    - name: NPM run build script
      run: npm run build
    
    - name: NPM run test script
      run: npm run test

    - name: Upload Deployment Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: deployment-artifacts
        path: |
          dist
          package.json
          pacakage-lock.json
          
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'

      uses: actions/download-artifact@v2
      with:
        name: deployment-artifacts

    - name: Generate deployment package
      run: npm run zip

    - name: Check deployment package
      run: zipinfo deploy.zip

    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: Beanstalk Deploy for app
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
        aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
        application_name: ELB-Demo
        environment_name: ElbDemo-env
        region: us-east-2
        version_label: "elb-demo-source-${{ steps.format-time.outputs.replaced }}"
        deployment_package: deploy.zip

    - name: Deployed!
      run: echo App deployed to ELB